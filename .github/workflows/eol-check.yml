name: EOL Check

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1'

permissions:
  issues: write
  contents: read

env:
  GH_TOKEN: ${{ github.token }}

jobs:
  eol-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Install GitHub CLI
        run: sudo apt update && sudo apt install gh -y

      - name: Generate Report
        run: |
          python run.py --input data/input/tools.json

      - name: Check EOL and generate issue content
        run: |
          python -m src.eol_checker \
            --repository ${{ github.repository }} \
            --run-id ${{ github.run_id }}

      - name: Check for existing EOL issues
        id: check-issues
        run: |
          existing_issues=$(gh issue list --label eol --state open --json number,title --jq 'length' 2>/dev/null || echo "0")
          echo "existing_issues=$existing_issues" >> $GITHUB_OUTPUT
          gh issue list --label eol --state open --json number --jq '.[].number' > open_issue_numbers.txt 2>/dev/null || true


      - name: Compare with existing issues
        id: compare-issues
        if: hashFiles('should_create_issue') != '' && steps.check-issues.outputs.existing_issues != '0'
        run: ./src/eol_workflow.sh compare-issues

      - name: Upload HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: eol-html-report
          path: data/output/reports/*

      - name: Create issue for critical/warning EOL tools
        if: hashFiles('should_create_issue') != '' && (steps.check-issues.outputs.existing_issues == '0' || steps.compare-issues.outputs.duplicate_found == 'false')
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: "EOL Tools Detected - Critical and Warning Items"
          content-filepath: eol_issue.md
          labels: eol,dependencies,security

      - name: Update existing similar issue
        if: hashFiles('should_create_issue') != '' && steps.compare-issues.outputs.duplicate_found == 'true'
        run: ./src/eol_workflow.sh update-issue ${{ steps.compare-issues.outputs.similar_issue_number }}

      - name: Close existing EOL issues if all clear
        if: hashFiles('close_issue.md') != '' && steps.check-issues.outputs.existing_issues != '0'
        run: ./src/eol_workflow.sh close-issues

      - name: Skip issue creation (duplicate found)
        if: hashFiles('should_create_issue') != '' && steps.compare-issues.outputs.duplicate_found == 'true'
        run: echo "Duplicate issue already exists (#${{ steps.compare-issues.outputs.similar_issue_number }}), skipping creation"

      - name: Clean up if no action needed
        if: hashFiles('should_create_issue') == '' && hashFiles('close_issue.md') == ''
        run: echo "No EOL issues detected and no existing issues to close"